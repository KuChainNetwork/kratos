name: Go

on:
  push:
    branches: [ dex, release, master, features/* ]
  pull_request:
    branches: [ dex, release, master, features/* ]

jobs:
  lint:
    name: lint
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29

  test-coverage-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: |
          make all
      - name: test & coverage report creation
        run: |
          go test ./... -mod=readonly -race -coverprofile=coverage.txt -covermode=atomic -tags='ledger test_ledger_mock'
      - name: filter out DONTCOVER
        run: |
          excludelist="$(find ./ -type f -name '*.go' | xargs grep -l 'DONTCOVER')"
          excludelist+=" $(find ./ -type f -name '*.pb.go')"
          excludelist+=" $(find ./ -type f -path './tests/mocks/*.go')"
          for filename in ${excludelist}; do
            filename=$(echo $filename | sed 's/^./github.com\/cosmos\/cosmos-sdk/g')
            echo "Excluding ${filename} from coverage report..."
            sed -i.bak "/$(echo $filename | sed 's/\//\\\//g')/d" coverage.txt
          done
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          fail_ci_if_error: true

  test:
    name: test
    runs-on: self-hosted
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go mod vendor

    - name: test
      run: go test ./...